scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/module_get_put-drivers-net-atl1c-atl1c.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_6c163mhd/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5285: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5287: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5289: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5283: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

line 13618: Dead code detected: return (0); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5768: Function pointer *(ops->alloc_coherent) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5808: Function pointer *(ops->free_coherent) with type void (*)(struct device *, size_t , void *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5641: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5566-5567: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5674: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5603: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_set_wakeup_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function synchronize_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_msi to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5674: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, (struct dma_attrs *)0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5603: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_kfree_skb_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_msi_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 5566-5567: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, (struct page *)(1152897315351035904ULL + (tmp___2 >> 12)), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2124 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            2108 (99%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         16 (1%)
  Times precision was empty:       126 (6%)
  Times precision was {false}:     39 (2%)
  Times result was cached:         1660 (78%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      299 (14%)
  Times result was 'false':        72 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         10388
  BDD entailment checks:           1110
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       325
Number of predicates discovered:          2
Number of abstraction locations:          18
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         1998
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 5.91
Number of irrelevant predicates:          65 (3%)
Number of preds handled by boolean abs:   299 (15%)
  Total number of models for allsat:      284
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.95

Time for post operator:                  7.066s
  Time for path formula creation:        6.883s
Time for strengthen operator:            0.174s
Time for prec operator:                  3.990s
  Time for abstraction:                  3.676s (Max:     0.096s, Count: 2124)
    Boolean abstraction:                 1.458s
    Solving time:                        1.503s (Max:     0.054s)
    Model enumeration time:              0.098s
    Time for BDD construction:           0.084s (Max:     0.012s)
Time for merge operator:                 0.755s
Time for coverage check:                 0.029s
  Time for BDD entailment checks:        0.027s
Total time for SMT solver (w/o itp):     1.601s

Number of path formula cache hits:   34368 (36%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.982s

Total number of created targets for pointer analysis: 291
   Number of created targets for uf: *unsigned_short_int is 9
   Number of created targets for uf: *unsigned_int is 2


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         572 (count: 3230, min: 0, max: 84, avg: 0.18)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.499s
Automaton transfers with branching:                0
Automaton transfer successors:                        92844 (count: 92844, min: 1, max: 1, avg: 1.00) [1 x 92844]

CPA algorithm statistics
------------------------
Number of iterations:            63358
Max size of waitlist:            149
Average size of waitlist:        76
Number of computed successors:   69348
Max successors for one state:    2
Number of times merged:          4639
Number of times stopped:         5731
Number of times breaked:         8

Total time for CPA algorithm:        21.686s (Max:    13.684s)
  Time for choose from waitlist:      0.129s
  Time for precision adjustment:      5.307s
  Time for transfer relation:        13.573s
  Time for merge operator:            1.079s
  Time for stop operator:             0.282s
  Time for adding to reached set:     0.448s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   8
Avg. length of target path (in blocks):                  65 (count: 8, min: 2, max: 21, avg: 8.13)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.484s
  Counterexample analysis:                             0.290s (Max:     0.098s, Calls: 8)
    Refinement sat check:                              0.212s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.029s
  Precision update:                                    0.016s
  ARG update:                                          0.117s

Length of refined path (in blocks):                      65 (count: 8, min: 2, max: 21, avg: 8.13)
Number of affected states:                               57 (count: 8, min: 1, max: 20, avg: 7.13)
Length (states) of path with itp 'true':                  0 (count: 8, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        57 (count: 8, min: 1, max: 20, avg: 7.13)
Length (states) of path with itp 'false':                 0 (count: 8, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 8, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              49 (count: 8, min: 0, max: 19, avg: 6.13)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                8
Number of successful refinements:     8
Number of failed refinements:         0
Max. size of reached set before ref.: 4892
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 1809.25
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      22.279s
Time for refinements:                 0.591s
Average time for refinement:          0.073s
Max time for refinement:              0.149s

Code Coverage
-----------------------------
  Function coverage:      0.424
  Visited lines:          2876
  Total lines:            5285
  Line coverage:          0.544
  Visited conditions:     556
  Total conditions:       1118
  Condition coverage:     0.497

CPAchecker general statistics
-----------------------------
Number of program locations:     7497
Number of CFA edges:             8615
Number of relevant variables:    1372
Number of functions:             229
Number of loops:                 49
Size of reached set:             49095
  Number of reached locations:   2137 (29%)
    Avg states per location:     22
    Max states per location:     2116 (at node N193)
  Number of reached functions:   97 (42%)
  Number of partitions:          49092
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2083 (before line 7983), Function atl1c_clean_rx_ring called from node N4431, stack depth 5 [43076326], stack [main, atl1c_nway_reset, atl1c_reinit_locked, atl1c_down, atl1c_clean_rx_ring]])
  Number of target states:       0
  Size of final wait list        125

Time for analysis setup:          8.199s
  Time for loading CPAs:          1.334s
  Time for loading parser:        0.752s
  Time for CFA construction:      5.952s
    Time for parsing file(s):     1.432s
    Time for AST to CFA:          2.113s
    Time for CFA sanity check:    0.585s
    Time for post-processing:     1.654s
      Time for var class.:        0.831s
Time for Analysis:               22.279s
CPU time for analysis:           22.280s
Total time for CPAchecker:       30.485s
Total CPU time for CPAchecker:   30.460s
Time for statistics:              0.880s

Time for Garbage Collector:       1.514s (in 49 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                126MB (   120 MiB) max;     65MB (    62 MiB) avg;    148MB (   141 MiB) peak
Used non-heap memory:             47MB (    45 MiB) max;     39MB (    37 MiB) avg;     47MB (    45 MiB) peak
Allocated heap memory:           195MB (   186 MiB) max;    128MB (   122 MiB) avg
Allocated non-heap memory:        49MB (    46 MiB) max;     40MB (    39 MiB) avg
Total process virtual memory:   8134MB (  7758 MiB) max;   8118MB (  7742 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
