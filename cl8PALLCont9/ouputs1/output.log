scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.0-rc1-mav/linux-4.0-rc1---drivers--hwmon--nct6775.ko_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_bz5pki96/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 11050: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12204: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12229: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12281: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12311: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12341: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 12373: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12890: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12925: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12945: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12980: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13000: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13035: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13055: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13090: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13110: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13145: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13165: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13200: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13220: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13255: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13275: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13310: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13330: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13365: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13385: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13420: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13440: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13474: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13494: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13529: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13549: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13584: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13604: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13639: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13659: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13694: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13714: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13749: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13769: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13804: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13824: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13859: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13879: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13914: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13934: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13969: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13989: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14023: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14043: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14077: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14097: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14131: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14151: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14185: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14205: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14239: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14259: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14293: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14313: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14347: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14361: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14376: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14390: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14405: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14419: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14434: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14448: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14463: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14477: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14492: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 15081: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 12626: Function pointer *arg0 with type void (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 17511: Function pointer *function with type void (*)(void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 17530: Function pointer *function with type void (*)(void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6054: Function pointer *(data->fan_from_reg) with type unsigned int (*)(u16 , unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6568: Function pointer *(data->fan_from_reg_min) with type unsigned int (*)(u16 , unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4316: Function pointer *(pv_cpu_ops.io_delay) with type void (*)() is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6675: Function pointer *(data->fan_from_reg_min) with type unsigned int (*)(u16 , unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6666: Function pointer *(data->fan_from_reg_min) with type unsigned int (*)(u16 , unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __devm_request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4316: Ignoring function call through function pointer *(pv_cpu_ops.io_delay): (*(pv_cpu_ops.io_delay))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_hwmon_device_register_with_groups to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            6001 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            5976 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         25 (0%)
  Times precision was empty:       2201 (37%)
  Times precision was {false}:     194 (3%)
  Times result was cached:         3415 (57%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      191 (3%)
  Times result was 'false':        476 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         41713
  BDD entailment checks:           4863
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       334
Number of predicates discovered:          5
Number of abstraction locations:          11
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         3818
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 9.92
Number of irrelevant predicates:          1892 (50%)
Number of preds handled by boolean abs:   205 (5%)
  Total number of models for allsat:      218
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.14

Time for post operator:                 27.457s
  Time for path formula creation:       27.039s
Time for strengthen operator:            0.768s
Time for prec operator:                817.606s
  Time for abstraction:                816.808s (Max:   422.714s, Count: 6001)
    Boolean abstraction:               811.832s
    Solving time:                      754.714s (Max:   422.756s)
    Model enumeration time:             59.186s
    Time for BDD construction:           0.051s (Max:     0.008s)
Time for merge operator:                 3.827s
Time for coverage check:                 0.092s
  Time for BDD entailment checks:        0.082s
Total time for SMT solver (w/o itp):   813.913s

Number of path formula cache hits:   325025 (80%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    19.742s

Total number of created targets for pointer analysis: 105054
   Number of created targets for uf: *unsigned_short_int is 727
   Number of created targets for uf: *(struct_attribute)* is 1121
   Number of created targets for uf: *(void)* is 3
   Number of created targets for uf: *signed_int is 65
   Number of created targets for uf: *(char)* is 67
   Number of created targets for uf: *unsigned_char is 139
   Number of created targets for uf: *_Bool is 58
   Number of created targets for uf: *(struct_platform_driver)* is 2


Number of BDD nodes:                               203
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         398 (count: 9245, min: 0, max: 32, avg: 0.04)
Time for BDD node cleanup:                             0.015s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.904s
  Time for transition matches:                         0.468s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                       385398 (count: 385398, min: 1, max: 1, avg: 1.00) [1 x 385398]

CPA algorithm statistics
------------------------
Number of iterations:            271751
Max size of waitlist:            1131
Average size of waitlist:        467
Number of computed successors:   295468
Max successors for one state:    2
Number of times merged:          18425
Number of times stopped:         20942
Number of times breaked:         20

Total time for CPA algorithm:       864.599s (Max:   795.889s)
  Time for choose from waitlist:      0.257s
  Time for precision adjustment:    821.080s
  Time for transfer relation:        35.217s
  Time for merge operator:            4.361s
  Time for stop operator:             0.758s
  Time for adding to reached set:     0.943s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   20
Avg. length of target path (in blocks):                 269 (count: 20, min: 2, max: 20, avg: 13.45)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  23.626s
  Counterexample analysis:                            22.114s (Max:     1.437s, Calls: 20)
    Refinement sat check:                             21.130s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.010s
  Precision update:                                    0.014s
  ARG update:                                          1.411s

Length of refined path (in blocks):                     219 (count: 20, min: 2, max: 13, avg: 10.95)
Number of affected states:                               31 (count: 20, min: 0, max: 9, avg: 1.55)
Length (states) of path with itp 'true':                168 (count: 20, min: 1, max: 11, avg: 8.40)
Length (states) of path with itp non-trivial itp:        31 (count: 20, min: 0, max: 9, avg: 1.55)
Length (states) of path with itp 'false':                14 (count: 20, min: 0, max: 1, avg: 0.70)
Different non-trivial interpolants along paths:           0 (count: 20, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              15 (count: 20, min: 0, max: 8, avg: 0.75)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                20
Number of successful refinements:     20
Number of failed refinements:         0
Max. size of reached set before ref.: 76208
Max. size of reached set after ref.:  75794
Avg. size of reached set before ref.: 49306.60
Avg. size of reached set after ref.:  36381.60

Total time for CEGAR algorithm:     891.024s
Time for refinements:                25.674s
Average time for refinement:          1.283s
Max time for refinement:              2.124s

Code Coverage
-----------------------------
  Function coverage:      0.098
  Visited lines:          2200
  Total lines:            7131
  Line coverage:          0.309
  Visited conditions:     336
  Total conditions:       1672
  Condition coverage:     0.201

CPAchecker general statistics
-----------------------------
Number of program locations:     10536
Number of CFA edges:             12020
Number of relevant variables:    1933
Number of functions:             650
Number of loops:                 75
Size of reached set:             15550
  Number of reached locations:   925 (9%)
    Avg states per location:     16
    Max states per location:     201 (at node N81)
  Number of reached functions:   64 (10%)
  Number of partitions:          15549
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N769 (before line 5549), Function nct6775_init_fan_div called from node N782, stack depth 12 [587b14fd], stack [main, ldv_entry_EMGentry_36, ldv_EMGentry_init_sensors_nct6775_init_36_11, sensors_nct6775_init, ldv___platform_driver_register_146, ldv___platform_driver_register, ldv_dispatch_register_34_2, ldv_platform_platform_instance_0, ldv_platform_instance_probe_0_14, nct6775_probe, nct6775_init_fan_common, nct6775_init_fan_div]])
  Number of target states:       0
  Size of final wait list        88

Time for analysis setup:          9.697s
  Time for loading CPAs:          1.441s
  Time for loading parser:        0.796s
  Time for CFA construction:      7.263s
    Time for parsing file(s):     1.601s
    Time for AST to CFA:          2.656s
    Time for CFA sanity check:    0.896s
    Time for post-processing:     1.881s
      Time for var class.:        1.017s
Time for Analysis:              891.024s
CPU time for analysis:          891.000s
Total time for CPAchecker:      900.725s
Total CPU time for CPAchecker:  900.650s
Time for statistics:              0.455s

Time for Garbage Collector:       4.707s (in 108 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                213MB (   203 MiB) max;    161MB (   154 MiB) avg;    232MB (   221 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           262MB (   250 MiB) max;    252MB (   241 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     44MB (    42 MiB) avg
Total process virtual memory:   8542MB (  8146 MiB) max;   8366MB (  7979 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
