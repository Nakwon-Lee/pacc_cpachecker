scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product01_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_dd7vnke8/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 107: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 116: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 235: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 258: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 356: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 716: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 762: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 811: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 843: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 553: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            39 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            20 (51%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         19 (49%)
  Times precision was empty:       4 (10%)
  Times precision was {false}:     14 (36%)
  Times result was cached:         7 (18%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      14 (36%)
  Times result was 'false':        15 (38%)
Number of strengthen sat checks:   0
Number of coverage checks:         257
  BDD entailment checks:           11
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       31
Number of predicates discovered:          4
Number of abstraction locations:          3
Max number of predicates per location:    3
Avg number of predicates per location:    2
Total predicates per abstraction:         57
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 2.04
Number of irrelevant predicates:          18 (32%)
Number of preds handled by boolean abs:   30 (53%)
  Total number of models for allsat:      20
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.43

Time for post operator:                  0.167s
  Time for path formula creation:        0.139s
Time for strengthen operator:            0.003s
Time for prec operator:                  0.145s
  Time for abstraction:                  0.133s (Max:     0.015s, Count: 39)
    Boolean abstraction:                 0.055s
    Solving time:                        0.043s (Max:     0.009s)
    Model enumeration time:              0.008s
    Time for BDD construction:           0.005s (Max:     0.004s)
Time for merge operator:                 0.025s
Time for coverage check:                 0.001s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.051s

Number of path formula cache hits:   1110 (65%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.132s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               211
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 194, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.036s
Automaton transfers with branching:                0
Automaton transfer successors:                         1617 (count: 1617, min: 1, max: 1, avg: 1.00) [1 x 1617]

CPA algorithm statistics
------------------------
Number of iterations:            1260
Max size of waitlist:            6
Average size of waitlist:        3
Number of computed successors:   1420
Max successors for one state:    2
Number of times merged:          123
Number of times stopped:         129
Number of times breaked:         4

Total time for CPA algorithm:         0.648s (Max:     0.192s)
  Time for choose from waitlist:      0.028s
  Time for precision adjustment:      0.206s
  Time for transfer relation:         0.293s
  Time for merge operator:            0.029s
  Time for stop operator:             0.005s
  Time for adding to reached set:     0.032s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4
Avg. length of target path (in blocks):                  12 (count: 4, min: 2, max: 4, avg: 3.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.047s
  Counterexample analysis:                             0.025s (Max:     0.012s, Calls: 4)
    Refinement sat check:                              0.005s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.008s
  Precision update:                                    0.001s
  ARG update:                                          0.010s

Length of refined path (in blocks):                      12 (count: 4, min: 2, max: 4, avg: 3.00)
Number of affected states:                                8 (count: 4, min: 1, max: 3, avg: 2.00)
Length (states) of path with itp 'true':                  0 (count: 4, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         8 (count: 4, min: 1, max: 3, avg: 2.00)
Length (states) of path with itp 'false':                 0 (count: 4, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           2 (count: 4, min: 0, max: 1, avg: 0.50)
Equal non-trivial interpolants along paths:               2 (count: 4, min: 0, max: 1, avg: 0.50)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4
Number of successful refinements:     4
Number of failed refinements:         0
Max. size of reached set before ref.: 431
Max. size of reached set after ref.:  32
Avg. size of reached set before ref.: 239.25
Avg. size of reached set after ref.:  32.00

Total time for CEGAR algorithm:       0.707s
Time for refinements:                 0.059s
Average time for refinement:          0.014s
Max time for refinement:              0.031s

Code Coverage
-----------------------------
  Function coverage:      0.563
  Visited lines:          106
  Total lines:            403
  Line coverage:          0.263
  Visited conditions:     30
  Total conditions:       60
  Condition coverage:     0.500

CPAchecker general statistics
-----------------------------
Number of program locations:     566
Number of CFA edges:             603
Number of relevant variables:    103
Number of functions:             32
Number of loops:                 5
Size of reached set:             448
  Number of reached locations:   141 (25%)
    Avg states per location:     3
    Max states per location:     6 (at node N0)
  Number of reached functions:   18 (56%)
  Number of partitions:          447
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N69 (before lines 169-214), Function test called from node N171, stack depth 3 [46271dd6], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.137s
  Time for loading CPAs:          0.552s
  Time for loading parser:        0.540s
  Time for CFA construction:      0.912s
    Time for parsing file(s):     0.371s
    Time for AST to CFA:          0.184s
    Time for CFA sanity check:    0.063s
    Time for post-processing:     0.193s
      Time for var class.:        0.065s
Time for Analysis:                0.707s
CPU time for analysis:            0.710s
Time for analyzing result:        0.001s
Total time for CPAchecker:        2.847s
Total CPU time for CPAchecker:    2.840s
Time for statistics:              0.058s

Time for Garbage Collector:       0.082s (in 4 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 45MB (    43 MiB) max;     29MB (    27 MiB) avg;     62MB (    60 MiB) peak
Used non-heap memory:             31MB (    29 MiB) max;     23MB (    22 MiB) avg;     32MB (    31 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        34MB (    32 MiB) max;     24MB (    23 MiB) avg
Total process virtual memory:   8132MB (  7755 MiB) max;   8050MB (  7677 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
