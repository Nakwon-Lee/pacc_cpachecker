scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec3_product42_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_bf6tczqs/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 140: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 322: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 331: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 386: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 443: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 475: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 489: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 510: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 533: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 853: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 899: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 690: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            33 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            17 (52%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         16 (48%)
  Times precision was empty:       4 (12%)
  Times precision was {false}:     15 (45%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      14 (42%)
  Times result was 'false':        14 (42%)
Number of strengthen sat checks:   0
Number of coverage checks:         390
  BDD entailment checks:           14
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       61
Number of predicates discovered:          5
Number of abstraction locations:          3
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         61
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 2.10
Number of irrelevant predicates:          15 (25%)
Number of preds handled by boolean abs:   46 (75%)
  Total number of models for allsat:      53
  Max number of models for allsat:        7
  Avg number of models for allsat:        3.79

Time for post operator:                  0.285s
  Time for path formula creation:        0.278s
Time for strengthen operator:            0.020s
Time for prec operator:                  0.263s
  Time for abstraction:                  0.237s (Max:     0.018s, Count: 33)
    Boolean abstraction:                 0.076s
    Solving time:                        0.074s (Max:     0.008s)
    Model enumeration time:              0.017s
    Time for BDD construction:           0.013s (Max:     0.007s)
Time for merge operator:                 0.051s
Time for coverage check:                 0.001s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.091s

Number of path formula cache hits:   982 (37%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.271s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               251
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 231, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.042s
Automaton transfers with branching:                0
Automaton transfer successors:                         2544 (count: 2544, min: 1, max: 1, avg: 1.00) [1 x 2544]

CPA algorithm statistics
------------------------
Number of iterations:            1942
Max size of waitlist:            8
Average size of waitlist:        4
Number of computed successors:   2155
Max successors for one state:    2
Number of times merged:          188
Number of times stopped:         193
Number of times breaked:         2

Total time for CPA algorithm:         0.978s (Max:     0.434s)
  Time for choose from waitlist:      0.014s
  Time for precision adjustment:      0.357s
  Time for transfer relation:         0.474s
  Time for merge operator:            0.062s
  Time for stop operator:             0.017s
  Time for adding to reached set:     0.021s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2
Avg. length of target path (in blocks):                   5 (count: 2, min: 2, max: 3, avg: 2.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.041s
  Counterexample analysis:                             0.025s (Max:     0.014s, Calls: 2)
    Refinement sat check:                              0.012s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.008s
  Precision update:                                    0.001s
  ARG update:                                          0.005s

Length of refined path (in blocks):                       5 (count: 2, min: 2, max: 3, avg: 2.50)
Number of affected states:                                3 (count: 2, min: 1, max: 2, avg: 1.50)
Length (states) of path with itp 'true':                  0 (count: 2, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         3 (count: 2, min: 1, max: 2, avg: 1.50)
Length (states) of path with itp 'false':                 0 (count: 2, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           1 (count: 2, min: 0, max: 1, avg: 0.50)
Equal non-trivial interpolants along paths:               0 (count: 2, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2
Number of successful refinements:     2
Number of failed refinements:         0
Max. size of reached set before ref.: 629
Max. size of reached set after ref.:  28
Avg. size of reached set before ref.: 381.50
Avg. size of reached set after ref.:  28.00

Total time for CEGAR algorithm:       1.033s
Time for refinements:                 0.055s
Average time for refinement:          0.027s
Max time for refinement:              0.032s

Code Coverage
-----------------------------
  Function coverage:      0.694
  Visited lines:          140
  Total lines:            429
  Line coverage:          0.326
  Visited conditions:     40
  Total conditions:       70
  Condition coverage:     0.571

CPAchecker general statistics
-----------------------------
Number of program locations:     611
Number of CFA edges:             657
Number of relevant variables:    115
Number of functions:             36
Number of loops:                 5
Size of reached set:             1242
  Number of reached locations:   186 (30%)
    Avg states per location:     6
    Max states per location:     20 (at node N119)
  Number of reached functions:   25 (69%)
  Number of partitions:          1239
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N74 (before lines 155-202), Function test called from node N46, stack depth 3 [1a72a540], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.288s
  Time for loading CPAs:          0.609s
  Time for loading parser:        0.523s
  Time for CFA construction:      0.991s
    Time for parsing file(s):     0.344s
    Time for AST to CFA:          0.229s
    Time for CFA sanity check:    0.073s
    Time for post-processing:     0.235s
      Time for var class.:        0.113s
Time for Analysis:                1.033s
CPU time for analysis:            1.030s
Time for analyzing result:        0.001s
Total time for CPAchecker:        3.325s
Total CPU time for CPAchecker:    3.310s
Time for statistics:              0.091s

Time for Garbage Collector:       0.087s (in 4 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 52MB (    50 MiB) max;     30MB (    29 MiB) avg;     62MB (    60 MiB) peak
Used non-heap memory:             32MB (    30 MiB) max;     24MB (    23 MiB) avg;     34MB (    32 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        34MB (    33 MiB) max;     25MB (    24 MiB) avg
Total process virtual memory:   8132MB (  7756 MiB) max;   8063MB (  7690 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
