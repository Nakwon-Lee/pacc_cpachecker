scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec4_product54_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_tjv__p9z/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 258: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 267: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 322: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 341: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 476: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 796: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 842: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 890: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 922: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 936: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 945: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 966: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 989: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 633: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            43 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            22 (51%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         21 (49%)
  Times precision was empty:       8 (19%)
  Times precision was {false}:     17 (40%)
  Times result was cached:         10 (23%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      8 (19%)
  Times result was 'false':        20 (47%)
Number of strengthen sat checks:   0
Number of coverage checks:         1290
  BDD entailment checks:           14
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       71
Number of predicates discovered:          7
Number of abstraction locations:          3
Max number of predicates per location:    6
Avg number of predicates per location:    2
Total predicates per abstraction:         87
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 3.48
Number of irrelevant predicates:          23 (26%)
Number of preds handled by boolean abs:   40 (46%)
  Total number of models for allsat:      34
  Max number of models for allsat:        8
  Avg number of models for allsat:        4.25

Time for post operator:                  0.394s
  Time for path formula creation:        0.364s
Time for strengthen operator:            0.050s
Time for prec operator:                  0.355s
  Time for abstraction:                  0.317s (Max:     0.032s, Count: 43)
    Boolean abstraction:                 0.075s
    Solving time:                        0.116s (Max:     0.017s)
    Model enumeration time:              0.017s
    Time for BDD construction:           0.008s (Max:     0.004s)
Time for merge operator:                 0.069s
Time for coverage check:                 0.000s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.133s

Number of path formula cache hits:   5754 (68%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.334s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               315
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         146 (count: 228, min: 0, max: 97, avg: 0.64)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.086s
Automaton transfers with branching:                0
Automaton transfer successors:                         8071 (count: 8071, min: 1, max: 1, avg: 1.00) [1 x 8071]

CPA algorithm statistics
------------------------
Number of iterations:            6261
Max size of waitlist:            11
Average size of waitlist:        6
Number of computed successors:   6936
Max successors for one state:    2
Number of times merged:          638
Number of times stopped:         640
Number of times breaked:         4

Total time for CPA algorithm:         1.795s (Max:     0.589s)
  Time for choose from waitlist:      0.041s
  Time for precision adjustment:      0.564s
  Time for transfer relation:         0.896s
  Time for merge operator:            0.119s
  Time for stop operator:             0.042s
  Time for adding to reached set:     0.055s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4
Avg. length of target path (in blocks):                  13 (count: 4, min: 2, max: 5, avg: 3.25)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.144s
  Counterexample analysis:                             0.081s (Max:     0.024s, Calls: 4)
    Refinement sat check:                              0.062s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.015s
  Precision update:                                    0.002s
  ARG update:                                          0.028s

Length of refined path (in blocks):                      12 (count: 4, min: 2, max: 4, avg: 3.00)
Number of affected states:                                8 (count: 4, min: 1, max: 3, avg: 2.00)
Length (states) of path with itp 'true':                  0 (count: 4, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         8 (count: 4, min: 1, max: 3, avg: 2.00)
Length (states) of path with itp 'false':                 1 (count: 4, min: 0, max: 1, avg: 0.25)
Different non-trivial interpolants along paths:           3 (count: 4, min: 0, max: 1, avg: 0.75)
Equal non-trivial interpolants along paths:               1 (count: 4, min: 0, max: 1, avg: 0.25)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4
Number of successful refinements:     4
Number of failed refinements:         0
Max. size of reached set before ref.: 2114
Max. size of reached set after ref.:  28
Avg. size of reached set before ref.: 1140.25
Avg. size of reached set after ref.:  28.00

Total time for CEGAR algorithm:       1.978s
Time for refinements:                 0.183s
Average time for refinement:          0.045s
Max time for refinement:              0.049s

Code Coverage
-----------------------------
  Function coverage:      0.744
  Visited lines:          151
  Total lines:            449
  Line coverage:          0.336
  Visited conditions:     44
  Total conditions:       76
  Condition coverage:     0.579

CPAchecker general statistics
-----------------------------
Number of program locations:     647
Number of CFA edges:             699
Number of relevant variables:    121
Number of functions:             39
Number of loops:                 5
Size of reached set:             1828
  Number of reached locations:   200 (31%)
    Avg states per location:     9
    Max states per location:     48 (at node N54)
  Number of reached functions:   29 (74%)
  Number of partitions:          1826
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N9 (before lines 55-102), Function test called from node N242, stack depth 3 [11f0a5a1], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.045s
  Time for loading CPAs:          0.486s
  Time for loading parser:        0.509s
  Time for CFA construction:      0.960s
    Time for parsing file(s):     0.306s
    Time for AST to CFA:          0.267s
    Time for CFA sanity check:    0.069s
    Time for post-processing:     0.212s
      Time for var class.:        0.100s
Time for Analysis:                1.982s
CPU time for analysis:            1.990s
Time for analyzing result:        0.001s
Total time for CPAchecker:        4.031s
Total CPU time for CPAchecker:    4.030s
Time for statistics:              0.089s

Time for Garbage Collector:       0.089s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 57MB (    54 MiB) max;     32MB (    31 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             33MB (    31 MiB) max;     26MB (    24 MiB) avg;     34MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:   8132MB (  7755 MiB) max;   8079MB (  7705 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
