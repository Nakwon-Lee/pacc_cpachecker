scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product58_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_rqffzyl2/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 101: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 133: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 147: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 258: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 395: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 404: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 459: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 478: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 591: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 614: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 934: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 980: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 771: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            41 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            21 (51%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         20 (49%)
  Times precision was empty:       8 (20%)
  Times precision was {false}:     22 (54%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      11 (27%)
  Times result was 'false':        19 (46%)
Number of strengthen sat checks:   0
Number of coverage checks:         793
  BDD entailment checks:           13
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       70
Number of predicates discovered:          6
Number of abstraction locations:          3
Max number of predicates per location:    5
Avg number of predicates per location:    2
Total predicates per abstraction:         63
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 1.91
Number of irrelevant predicates:          22 (35%)
Number of preds handled by boolean abs:   41 (65%)
  Total number of models for allsat:      35
  Max number of models for allsat:        5
  Avg number of models for allsat:        3.18

Time for post operator:                  0.303s
  Time for path formula creation:        0.284s
Time for strengthen operator:            0.019s
Time for prec operator:                  0.331s
  Time for abstraction:                  0.315s (Max:     0.018s, Count: 41)
    Boolean abstraction:                 0.052s
    Solving time:                        0.147s (Max:     0.013s)
    Model enumeration time:              0.015s
    Time for BDD construction:           0.010s (Max:     0.006s)
Time for merge operator:                 0.042s
Time for coverage check:                 0.000s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.162s

Number of path formula cache hits:   3562 (66%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.258s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               265
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          77 (count: 270, min: 0, max: 77, avg: 0.29)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.055s
Automaton transfers with branching:                0
Automaton transfer successors:                         5161 (count: 5161, min: 1, max: 1, avg: 1.00) [1 x 5161]

CPA algorithm statistics
------------------------
Number of iterations:            3972
Max size of waitlist:            10
Average size of waitlist:        5
Number of computed successors:   4397
Max successors for one state:    2
Number of times merged:          390
Number of times stopped:         392
Number of times breaked:         4

Total time for CPA algorithm:         1.313s (Max:     0.354s)
  Time for choose from waitlist:      0.012s
  Time for precision adjustment:      0.458s
  Time for transfer relation:         0.649s
  Time for merge operator:            0.078s
  Time for stop operator:             0.028s
  Time for adding to reached set:     0.030s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4
Avg. length of target path (in blocks):                  12 (count: 4, min: 2, max: 5, avg: 3.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.100s
  Counterexample analysis:                             0.069s (Max:     0.026s, Calls: 4)
    Refinement sat check:                              0.040s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.013s
  Precision update:                                    0.002s
  ARG update:                                          0.012s

Length of refined path (in blocks):                      11 (count: 4, min: 2, max: 4, avg: 2.75)
Number of affected states:                                7 (count: 4, min: 1, max: 3, avg: 1.75)
Length (states) of path with itp 'true':                  0 (count: 4, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         7 (count: 4, min: 1, max: 3, avg: 1.75)
Length (states) of path with itp 'false':                 1 (count: 4, min: 0, max: 1, avg: 0.25)
Different non-trivial interpolants along paths:           2 (count: 4, min: 0, max: 1, avg: 0.50)
Equal non-trivial interpolants along paths:               1 (count: 4, min: 0, max: 1, avg: 0.25)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4
Number of successful refinements:     4
Number of failed refinements:         0
Max. size of reached set before ref.: 1413
Max. size of reached set after ref.:  28
Avg. size of reached set before ref.: 717.75
Avg. size of reached set after ref.:  28.00

Total time for CEGAR algorithm:       1.434s
Time for refinements:                 0.120s
Average time for refinement:          0.030s
Max time for refinement:              0.039s

Code Coverage
-----------------------------
  Function coverage:      0.718
  Visited lines:          145
  Total lines:            446
  Line coverage:          0.325
  Visited conditions:     42
  Total conditions:       74
  Condition coverage:     0.568

CPAchecker general statistics
-----------------------------
Number of program locations:     642
Number of CFA edges:             691
Number of relevant variables:    119
Number of functions:             39
Number of loops:                 5
Size of reached set:             1228
  Number of reached locations:   192 (30%)
    Avg states per location:     6
    Max states per location:     24 (at node N154)
  Number of reached functions:   28 (72%)
  Number of partitions:          1226
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N300 (before lines 526-573), Function test called from node N122, stack depth 3 [1bae316d], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.142s
  Time for loading CPAs:          0.509s
  Time for loading parser:        0.509s
  Time for CFA construction:      0.939s
    Time for parsing file(s):     0.314s
    Time for AST to CFA:          0.266s
    Time for CFA sanity check:    0.062s
    Time for post-processing:     0.180s
      Time for var class.:        0.075s
Time for Analysis:                1.435s
CPU time for analysis:            1.430s
Time for analyzing result:        0.000s
Total time for CPAchecker:        3.585s
Total CPU time for CPAchecker:    3.580s
Time for statistics:              0.061s

Time for Garbage Collector:       0.100s (in 6 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 55MB (    52 MiB) max;     30MB (    29 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             33MB (    31 MiB) max;     25MB (    24 MiB) avg;     34MB (    32 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    33 MiB) max;     27MB (    25 MiB) avg
Total process virtual memory:   8132MB (  7755 MiB) max;   8071MB (  7698 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
