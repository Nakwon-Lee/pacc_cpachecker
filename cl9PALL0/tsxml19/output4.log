scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product46_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_4bsoca3x/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 51: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 74: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 394: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 440: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 495: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 527: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 541: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 642: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 778: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 787: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 842: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 231: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            51 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            26 (51%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         25 (49%)
  Times precision was empty:       3 (6%)
  Times precision was {false}:     21 (41%)
  Times result was cached:         6 (12%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      21 (41%)
  Times result was 'false':        20 (39%)
Number of strengthen sat checks:   0
Number of coverage checks:         929
  BDD entailment checks:           15
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       67
Number of predicates discovered:          5
Number of abstraction locations:          3
Max number of predicates per location:    4
Avg number of predicates per location:    3
Total predicates per abstraction:         85
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 2.02
Number of irrelevant predicates:          24 (28%)
Number of preds handled by boolean abs:   55 (65%)
  Total number of models for allsat:      43
  Max number of models for allsat:        4
  Avg number of models for allsat:        2.05

Time for post operator:                  0.278s
  Time for path formula creation:        0.262s
Time for strengthen operator:            0.015s
Time for prec operator:                  0.321s
  Time for abstraction:                  0.297s (Max:     0.019s, Count: 51)
    Boolean abstraction:                 0.129s
    Solving time:                        0.114s (Max:     0.011s)
    Model enumeration time:              0.017s
    Time for BDD construction:           0.015s (Max:     0.006s)
Time for merge operator:                 0.058s
Time for coverage check:                 0.000s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.131s

Number of path formula cache hits:   4534 (69%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.249s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               244
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          50 (count: 305, min: 0, max: 50, avg: 0.16)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.078s
Automaton transfers with branching:                0
Automaton transfer successors:                         6257 (count: 6257, min: 1, max: 1, avg: 1.00) [1 x 6257]

CPA algorithm statistics
------------------------
Number of iterations:            4879
Max size of waitlist:            9
Average size of waitlist:        5
Number of computed successors:   5383
Max successors for one state:    2
Number of times merged:          457
Number of times stopped:         462
Number of times breaked:         5

Total time for CPA algorithm:         1.393s (Max:     0.316s)
  Time for choose from waitlist:      0.009s
  Time for precision adjustment:      0.429s
  Time for transfer relation:         0.663s
  Time for merge operator:            0.093s
  Time for stop operator:             0.040s
  Time for adding to reached set:     0.039s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                  17 (count: 5, min: 2, max: 5, avg: 3.40)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.124s
  Counterexample analysis:                             0.063s (Max:     0.026s, Calls: 5)
    Refinement sat check:                              0.037s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.008s
  Precision update:                                    0.002s
  ARG update:                                          0.037s

Length of refined path (in blocks):                      17 (count: 5, min: 2, max: 5, avg: 3.40)
Number of affected states:                               12 (count: 5, min: 1, max: 4, avg: 2.40)
Length (states) of path with itp 'true':                  0 (count: 5, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        12 (count: 5, min: 1, max: 4, avg: 2.40)
Length (states) of path with itp 'false':                 0 (count: 5, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           5 (count: 5, min: 0, max: 2, avg: 1.00)
Equal non-trivial interpolants along paths:               2 (count: 5, min: 0, max: 1, avg: 0.40)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 1404
Max. size of reached set after ref.:  32
Avg. size of reached set before ref.: 767.60
Avg. size of reached set after ref.:  32.00

Total time for CEGAR algorithm:       1.555s
Time for refinements:                 0.152s
Average time for refinement:          0.030s
Max time for refinement:              0.040s

Code Coverage
-----------------------------
  Function coverage:      0.711
  Visited lines:          152
  Total lines:            442
  Line coverage:          0.344
  Visited conditions:     44
  Total conditions:       74
  Condition coverage:     0.595

CPAchecker general statistics
-----------------------------
Number of program locations:     635
Number of CFA edges:             685
Number of relevant variables:    114
Number of functions:             38
Number of loops:                 5
Size of reached set:             1224
  Number of reached locations:   206 (32%)
    Avg states per location:     5
    Max states per location:     24 (at node N349)
  Number of reached functions:   27 (71%)
  Number of partitions:          1223
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N614 (before lines 912-959), Function test called from node N434, stack depth 3 [6676f6a0], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.942s
  Time for loading CPAs:          0.551s
  Time for loading parser:        0.453s
  Time for CFA construction:      0.851s
    Time for parsing file(s):     0.314s
    Time for AST to CFA:          0.191s
    Time for CFA sanity check:    0.049s
    Time for post-processing:     0.191s
      Time for var class.:        0.083s
Time for Analysis:                1.556s
CPU time for analysis:            1.560s
Time for analyzing result:        0.001s
Total time for CPAchecker:        3.543s
Total CPU time for CPAchecker:    3.540s
Time for statistics:              0.065s

Time for Garbage Collector:       0.080s (in 5 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 57MB (    54 MiB) max;     33MB (    31 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             33MB (    31 MiB) max;     25MB (    24 MiB) avg;     34MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    34 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:   8133MB (  7757 MiB) max;   8074MB (  7700 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
