scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec4_product53_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_06vgm20y/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 356: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 402: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 621: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 630: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 685: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 704: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 719: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 742: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 800: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 832: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 846: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 855: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 977: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 193: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            35 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            18 (51%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         17 (49%)
  Times precision was empty:       6 (17%)
  Times precision was {false}:     19 (54%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      10 (29%)
  Times result was 'false':        17 (49%)
Number of strengthen sat checks:   0
Number of coverage checks:         1043
  BDD entailment checks:           13
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       71
Number of predicates discovered:          8
Number of abstraction locations:          3
Max number of predicates per location:    7
Avg number of predicates per location:    3
Total predicates per abstraction:         77
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 2.66
Number of irrelevant predicates:          19 (25%)
Number of preds handled by boolean abs:   58 (75%)
  Total number of models for allsat:      50
  Max number of models for allsat:        8
  Avg number of models for allsat:        5.00

Time for post operator:                  0.353s
  Time for path formula creation:        0.339s
Time for strengthen operator:            0.059s
Time for prec operator:                  0.310s
  Time for abstraction:                  0.300s (Max:     0.023s, Count: 35)
    Boolean abstraction:                 0.074s
    Solving time:                        0.143s (Max:     0.016s)
    Model enumeration time:              0.013s
    Time for BDD construction:           0.014s (Max:     0.006s)
Time for merge operator:                 0.057s
Time for coverage check:                 0.003s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.156s

Number of path formula cache hits:   4079 (60%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.308s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               396
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          97 (count: 262, min: 0, max: 97, avg: 0.37)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.073s
Automaton transfers with branching:                0
Automaton transfer successors:                         6507 (count: 6507, min: 1, max: 1, avg: 1.00) [1 x 6507]

CPA algorithm statistics
------------------------
Number of iterations:            5039
Max size of waitlist:            11
Average size of waitlist:        6
Number of computed successors:   5584
Max successors for one state:    2
Number of times merged:          515
Number of times stopped:         517
Number of times breaked:         3

Total time for CPA algorithm:         1.569s (Max:     0.523s)
  Time for choose from waitlist:      0.073s
  Time for precision adjustment:      0.453s
  Time for transfer relation:         0.734s
  Time for merge operator:            0.133s
  Time for stop operator:             0.027s
  Time for adding to reached set:     0.041s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3
Avg. length of target path (in blocks):                   8 (count: 3, min: 2, max: 3, avg: 2.67)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.109s
  Counterexample analysis:                             0.047s (Max:     0.025s, Calls: 3)
    Refinement sat check:                              0.038s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.009s
  Precision update:                                    0.015s
  ARG update:                                          0.032s

Length of refined path (in blocks):                       7 (count: 3, min: 2, max: 3, avg: 2.33)
Number of affected states:                                4 (count: 3, min: 1, max: 2, avg: 1.33)
Length (states) of path with itp 'true':                  0 (count: 3, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         4 (count: 3, min: 1, max: 2, avg: 1.33)
Length (states) of path with itp 'false':                 1 (count: 3, min: 0, max: 1, avg: 0.33)
Different non-trivial interpolants along paths:           1 (count: 3, min: 0, max: 1, avg: 0.33)
Equal non-trivial interpolants along paths:               0 (count: 3, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3
Number of successful refinements:     3
Number of failed refinements:         0
Max. size of reached set before ref.: 2102
Max. size of reached set after ref.:  28
Avg. size of reached set before ref.: 1106.33
Avg. size of reached set after ref.:  28.00

Total time for CEGAR algorithm:       1.691s
Time for refinements:                 0.122s
Average time for refinement:          0.040s
Max time for refinement:              0.049s

Code Coverage
-----------------------------
  Function coverage:      0.737
  Visited lines:          148
  Total lines:            446
  Line coverage:          0.332
  Visited conditions:     44
  Total conditions:       76
  Condition coverage:     0.579

CPAchecker general statistics
-----------------------------
Number of program locations:     641
Number of CFA edges:             693
Number of relevant variables:    121
Number of functions:             38
Number of loops:                 5
Size of reached set:             1816
  Number of reached locations:   196 (31%)
    Avg states per location:     9
    Max states per location:     48 (at node N353)
  Number of reached functions:   28 (74%)
  Number of partitions:          1814
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N309 (before lines 420-465), Function test called from node N636, stack depth 3 [2ce6c6ec], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.199s
  Time for loading CPAs:          0.593s
  Time for loading parser:        0.527s
  Time for CFA construction:      0.975s
    Time for parsing file(s):     0.328s
    Time for AST to CFA:          0.250s
    Time for CFA sanity check:    0.065s
    Time for post-processing:     0.203s
      Time for var class.:        0.066s
Time for Analysis:                1.691s
CPU time for analysis:            1.690s
Time for analyzing result:        0.014s
Total time for CPAchecker:        3.893s
Total CPU time for CPAchecker:    3.890s
Time for statistics:              0.133s

Time for Garbage Collector:       0.091s (in 6 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 56MB (    54 MiB) max;     32MB (    31 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             33MB (    32 MiB) max;     25MB (    24 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:   8134MB (  7758 MiB) max;   8074MB (  7700 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
