scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/linux-3.8-rc1-32_7a-drivers--input--misc--uinput.ko-ldv_main0_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ghbrr4m8/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3102: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3105: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3108: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 3177: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3180: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3183: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 4975: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 4999: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5023: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5047: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5071: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3344: Function pointer *(p->_qproc) with type void (*)(struct file *, wait_queue_head_t *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function misc_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3300: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strndup_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_ff_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_ff_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3344: Ignoring function call through function pointer *(p->_qproc): (*(p->_qproc))(filp, wait_address, p); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function memdup_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrndup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_mt_init_slots to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_alloc_absinfo to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nonseekable_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1501296 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1474174 (98%)
  Because of loop head:            24156 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2966 (0%)
  Times precision was empty:       82333 (5%)
  Times precision was {false}:     2114 (0%)
  Times result was cached:         1342638 (89%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      74211 (5%)
  Times result was 'false':        105106 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         1403258
  BDD entailment checks:           666286
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       24
Number of predicates discovered:          82
Number of abstraction locations:          195
Max number of predicates per location:    27
Avg number of predicates per location:    6
Total predicates per abstraction:         8829736
Max number of predicates per abstraction: 28
Avg number of predicates per abstraction: 115.69
Number of irrelevant predicates:          2703410 (31%)
Number of preds handled by boolean abs:   510571 (6%)
  Total number of models for allsat:      1029376
  Max number of models for allsat:        1728
  Avg number of models for allsat:        13.87

Time for post operator:                 48.110s
  Time for path formula creation:       45.975s
Time for strengthen operator:            4.866s
Time for prec operator:                641.486s
  Time for abstraction:                627.428s (Max:     1.853s, Count: 1501296)
    Boolean abstraction:               225.931s
    Solving time:                      101.734s (Max:     0.116s)
    Model enumeration time:             91.036s
    Time for BDD construction:          21.583s (Max:     0.164s)
Time for merge operator:                 3.583s
Time for coverage check:                 0.849s
  Time for BDD entailment checks:        0.704s
Total time for SMT solver (w/o itp):   192.770s

Number of path formula cache hits:   7920122 (86%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    33.549s

Total number of created targets for pointer analysis: 62968
   Number of created targets for uf: *(char)* is 119
   Number of created targets for uf: *unsigned_char is 385
   Number of created targets for uf: *(struct_input_dev)* is 516
   Number of created targets for uf: *enum_uinput_state is 876
   Number of created targets for uf: *(struct_uinput_request)* is 41041
   Number of created targets for uf: *unsigned_int is 8819


Number of BDD nodes:                               240582
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      222696 (count: 1240065, min: 0, max: 2030, avg: 0.18)
Time for BDD node cleanup:                             0.207s
Time for BDD garbage collection:                       0.081s (in 15 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  8.922s
  Time for transition matches:                         5.243s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.017s
Automaton transfers with branching:                0
Automaton transfer successors:                      7750876 (count: 7750876, min: 1, max: 1, avg: 1.00) [1 x 7750876]

CPA algorithm statistics
------------------------
Number of iterations:            5802567
Max size of waitlist:            182
Average size of waitlist:        69
Number of computed successors:   6539036
Max successors for one state:    2
Number of times merged:          368486
Number of times stopped:         614009
Number of times breaked:         2966

Total time for CPA algorithm:       811.546s (Max:    27.589s)
  Time for choose from waitlist:      1.689s
  Time for precision adjustment:    671.621s
  Time for transfer relation:       105.135s
  Time for merge operator:            9.076s
  Time for stop operator:             6.145s
  Time for adding to reached set:     7.171s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2966
Avg. length of target path (in blocks):              132894 (count: 2966, min: 10, max: 171, avg: 44.81)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  43.640s
  Counterexample analysis:                            32.224s (Max:     0.082s, Calls: 2966)
    Refinement sat check:                             16.334s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.084s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.294s
  Precision update:                                    0.767s
  ARG update:                                          9.603s

Length of refined path (in blocks):                  104323 (count: 2966, min: 6, max: 146, avg: 35.17)
Number of affected states:                            29486 (count: 2966, min: 1, max: 80, avg: 9.94)
Length (states) of path with itp 'true':              71871 (count: 2966, min: 0, max: 119, avg: 24.23)
Length (states) of path with itp non-trivial itp:     29486 (count: 2966, min: 1, max: 80, avg: 9.94)
Length (states) of path with itp 'false':              2966 (count: 2966, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        2745 (count: 2966, min: 0, max: 11, avg: 0.93)
Equal non-trivial interpolants along paths:           23775 (count: 2966, min: 0, max: 76, avg: 8.02)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2966
Number of successful refinements:     2966
Number of failed refinements:         0
Max. size of reached set before ref.: 163976
Max. size of reached set after ref.:  156070
Avg. size of reached set before ref.: 10589.42
Avg. size of reached set after ref.:  8647.56

Total time for CEGAR algorithm:     896.503s
Time for refinements:                67.074s
Average time for refinement:          0.022s
Max time for refinement:              0.405s

Code Coverage
-----------------------------
  Function coverage:      0.404
  Visited lines:          1172
  Total lines:            1738
  Line coverage:          0.674
  Visited conditions:     246
  Total conditions:       418
  Condition coverage:     0.589

CPAchecker general statistics
-----------------------------
Number of program locations:     2425
Number of CFA edges:             2701
Number of relevant variables:    375
Number of functions:             109
Number of loops:                 9
Size of reached set:             60364
  Number of reached locations:   649 (27%)
    Avg states per location:     93
    Max states per location:     1319 (at node N1690)
  Number of reached functions:   44 (40%)
  Number of partitions:          59158
    Avg size of partitions:      1
    Max size of partitions:      28 (with key [N1563 (before line 4913), Function main called from node N1461, stack depth 1 [2c282004], stack [main]])
  Number of target states:       0
  Size of final wait list        101

Time for analysis setup:          3.808s
  Time for loading CPAs:          0.719s
  Time for loading parser:        0.542s
  Time for CFA construction:      2.436s
    Time for parsing file(s):     0.644s
    Time for AST to CFA:          0.903s
    Time for CFA sanity check:    0.168s
    Time for post-processing:     0.552s
      Time for var class.:        0.262s
Time for Analysis:              896.503s
CPU time for analysis:          896.470s
Total time for CPAchecker:      900.314s
Total CPU time for CPAchecker:  900.280s
Time for statistics:              0.724s

Time for Garbage Collector:      61.935s (in 1653 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                996MB (   950 MiB) max;    454MB (   433 MiB) avg;   1014MB (   967 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          1198MB (  1142 MiB) max;    671MB (   640 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:  10363MB (  9883 MiB) max;   8849MB (  8439 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
