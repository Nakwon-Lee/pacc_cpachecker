scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/loops/vogal_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_s9bvqn01/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1339 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            1266 (95%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         73 (5%)
  Times precision was empty:       45 (3%)
  Times precision was {false}:     81 (6%)
  Times result was cached:         117 (9%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1096 (82%)
  Times result was 'false':        522 (39%)
Number of strengthen sat checks:   0
Number of coverage checks:         4829
  BDD entailment checks:           4091
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       7
Number of predicates discovered:          109
Number of abstraction locations:          7
Max number of predicates per location:    68
Avg number of predicates per location:    37
Total predicates per abstraction:         39102
Max number of predicates per abstraction: 68
Avg number of predicates per abstraction: 33.22
Number of irrelevant predicates:          1130 (3%)
Number of preds handled by boolean abs:   36032 (92%)
  Total number of models for allsat:      152778
  Max number of models for allsat:        3302
  Avg number of models for allsat:        139.40

Time for post operator:                  0.549s
  Time for path formula creation:        0.532s
Time for strengthen operator:            0.023s
Time for prec operator:                 55.214s
  Time for abstraction:                 55.134s (Max:     1.904s, Count: 1339)
    Boolean abstraction:                50.745s
    Solving time:                        4.592s (Max:     0.034s)
    Model enumeration time:             31.824s
    Time for BDD construction:          13.415s (Max:     0.462s)
Time for merge operator:                 0.039s
Time for coverage check:                 0.084s
  Time for BDD entailment checks:        0.083s
Total time for SMT solver (w/o itp):    36.416s

Number of path formula cache hits:   4764 (59%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.505s

Total number of created targets for pointer analysis: 96
   Number of created targets for uf: *char is 97


Number of BDD nodes:                               246950
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      388494 (count: 167311, min: 0, max: 16198, avg: 2.32)
Time for BDD node cleanup:                             0.061s
Time for BDD garbage collection:                       0.478s (in 122 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.066s
Automaton transfers with branching:                0
Automaton transfer successors:                         7441 (count: 7441, min: 1, max: 1, avg: 1.00) [1 x 7441]

CPA algorithm statistics
------------------------
Number of iterations:            4989
Max size of waitlist:            9
Average size of waitlist:        5
Number of computed successors:   6053
Max successors for one state:    2
Number of times merged:          369
Number of times stopped:         430
Number of times breaked:         26

Total time for CPA algorithm:        56.588s (Max:    12.749s)
  Time for choose from waitlist:      0.017s
  Time for precision adjustment:     55.333s
  Time for transfer relation:         0.943s
  Time for merge operator:            0.073s
  Time for stop operator:             0.113s
  Time for adding to reached set:     0.043s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   26
Avg. length of target path (in blocks):                 681 (count: 26, min: 5, max: 56, avg: 26.19)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.186s
  Counterexample analysis:                             2.090s (Max:     1.364s, Calls: 26)
    Refinement sat check:                              0.402s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.039s
  Precision update:                                    0.026s
  ARG update:                                          0.018s

Length of refined path (in blocks):                     550 (count: 26, min: 2, max: 52, avg: 21.15)
Number of affected states:                              402 (count: 26, min: 1, max: 45, avg: 15.46)
Length (states) of path with itp 'true':                122 (count: 26, min: 0, max: 14, avg: 4.69)
Length (states) of path with itp non-trivial itp:       402 (count: 26, min: 1, max: 45, avg: 15.46)
Length (states) of path with itp 'false':                17 (count: 26, min: 0, max: 1, avg: 0.65)
Different non-trivial interpolants along paths:         181 (count: 26, min: 0, max: 39, avg: 6.96)
Equal non-trivial interpolants along paths:             195 (count: 26, min: 0, max: 36, avg: 7.50)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                26
Number of successful refinements:     26
Number of failed refinements:         0
Max. size of reached set before ref.: 424
Max. size of reached set after ref.:  108
Avg. size of reached set before ref.: 202.88
Avg. size of reached set after ref.:  37.85

Total time for CEGAR algorithm:      58.807s
Time for refinements:                 2.209s
Average time for refinement:          0.084s
Max time for refinement:              1.379s

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          25
  Total lines:            25
  Line coverage:          1.000
  Visited conditions:     20
  Total conditions:       20
  Condition coverage:     1.000

CPAchecker general statistics
-----------------------------
Number of program locations:     73
Number of CFA edges:             82
Number of relevant variables:    9
Number of functions:             2
Number of loops:                 6
Size of reached set:             811
  Number of reached locations:   48 (66%)
    Avg states per location:     16
    Max states per location:     30 (at node N37)
  Number of reached functions:   2 (100%)
  Number of partitions:          716
    Avg size of partitions:      1
    Max size of partitions:      30 (with key [N41 (before line 29), Function main called from node N9, stack depth 1 [7526515b], stack [main]])
  Number of target states:       0

Time for analysis setup:          1.768s
  Time for loading CPAs:          0.571s
  Time for loading parser:        0.501s
  Time for CFA construction:      0.615s
    Time for parsing file(s):     0.249s
    Time for AST to CFA:          0.139s
    Time for CFA sanity check:    0.011s
    Time for post-processing:     0.089s
      Time for var class.:        0.032s
Time for Analysis:               58.807s
CPU time for analysis:           58.810s
Time for analyzing result:        0.000s
Total time for CPAchecker:       60.578s
Total CPU time for CPAchecker:   60.580s
Time for statistics:              0.067s

Time for Garbage Collector:       0.725s (in 127 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 75MB (    72 MiB) max;     47MB (    45 MiB) avg;     80MB (    76 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     33MB (    32 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8201MB (  7821 MiB) max;   8141MB (  7764 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
