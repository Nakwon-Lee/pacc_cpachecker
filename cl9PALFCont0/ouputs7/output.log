scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec4_product31_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_i1uqsnq6/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 140: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 152: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 175: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 495: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 541: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 594: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 626: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 838: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 847: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 902: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 332: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2124 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2065 (97%)
  Because of loop head:            39 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         20 (1%)
  Times precision was empty:       433 (20%)
  Times precision was {false}:     52 (2%)
  Times result was cached:         1478 (70%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      161 (8%)
  Times result was 'false':        269 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         521
  BDD entailment checks:           323
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          40
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         3536
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 16.60
Number of irrelevant predicates:          1373 (39%)
Number of preds handled by boolean abs:   288 (8%)
  Total number of models for allsat:      172
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.07

Time for post operator:                  0.423s
  Time for path formula creation:        0.390s
Time for strengthen operator:            0.037s
Time for prec operator:                  0.872s
  Time for abstraction:                  0.776s (Max:     0.015s, Count: 2124)
    Boolean abstraction:                 0.151s
    Solving time:                        0.061s (Max:     0.009s)
    Model enumeration time:              0.012s
    Time for BDD construction:           0.032s (Max:     0.008s)
Time for merge operator:                 0.013s
Time for coverage check:                 0.017s
  Time for BDD entailment checks:        0.017s
Total time for SMT solver (w/o itp):     0.073s

Number of path formula cache hits:   5006 (57%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.373s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               235
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         284 (count: 2048, min: 0, max: 164, avg: 0.14)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.077s
Automaton transfers with branching:                0
Automaton transfer successors:                         7737 (count: 7737, min: 1, max: 1, avg: 1.00) [1 x 7737]

CPA algorithm statistics
------------------------
Number of iterations:            6006
Max size of waitlist:            14
Average size of waitlist:        6
Number of computed successors:   6710
Max successors for one state:    2
Number of times merged:          99
Number of times stopped:         346
Number of times breaked:         20

Total time for CPA algorithm:         2.124s (Max:     0.242s)
  Time for choose from waitlist:      0.031s
  Time for precision adjustment:      1.006s
  Time for transfer relation:         0.845s
  Time for merge operator:            0.026s
  Time for stop operator:             0.048s
  Time for adding to reached set:     0.061s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   20
Avg. length of target path (in blocks):                 804 (count: 20, min: 26, max: 56, avg: 40.20)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.224s
  Counterexample analysis:                             0.140s (Max:     0.020s, Calls: 20)
    Refinement sat check:                              0.035s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.021s
  Precision update:                                    0.007s
  ARG update:                                          0.042s

Length of refined path (in blocks):                     511 (count: 20, min: 14, max: 49, avg: 25.55)
Number of affected states:                              404 (count: 20, min: 2, max: 48, avg: 20.20)
Length (states) of path with itp 'true':                 87 (count: 20, min: 0, max: 16, avg: 4.35)
Length (states) of path with itp non-trivial itp:       404 (count: 20, min: 2, max: 48, avg: 20.20)
Length (states) of path with itp 'false':                20 (count: 20, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           4 (count: 20, min: 0, max: 1, avg: 0.20)
Equal non-trivial interpolants along paths:             380 (count: 20, min: 1, max: 46, avg: 19.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                20
Number of successful refinements:     20
Number of failed refinements:         0
Max. size of reached set before ref.: 682
Max. size of reached set after ref.:  417
Avg. size of reached set before ref.: 390.30
Avg. size of reached set after ref.:  108.00

Total time for CEGAR algorithm:       2.382s
Time for refinements:                 0.256s
Average time for refinement:          0.012s
Max time for refinement:              0.049s

Code Coverage
-----------------------------
  Function coverage:      0.459
  Visited lines:          88
  Total lines:            433
  Line coverage:          0.203
  Visited conditions:     30
  Total conditions:       72
  Condition coverage:     0.417

CPAchecker general statistics
-----------------------------
Number of program locations:     623
Number of CFA edges:             673
Number of relevant variables:    115
Number of functions:             37
Number of loops:                 5
Size of reached set:             450
  Number of reached locations:   121 (19%)
    Avg states per location:     3
    Max states per location:     16 (at node N612)
  Number of reached functions:   17 (46%)
  Number of partitions:          445
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N456 (before lines 650-697), Function test called from node N46, stack depth 3 [6dd36ab6], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.050s
  Time for loading CPAs:          0.515s
  Time for loading parser:        0.478s
  Time for CFA construction:      0.933s
    Time for parsing file(s):     0.301s
    Time for AST to CFA:          0.230s
    Time for CFA sanity check:    0.066s
    Time for post-processing:     0.222s
      Time for var class.:        0.102s
Time for Analysis:                2.382s
CPU time for analysis:            2.380s
Time for analyzing result:        0.001s
Total time for CPAchecker:        4.438s
Total CPU time for CPAchecker:    4.430s
Time for statistics:              0.077s

Time for Garbage Collector:       0.093s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    57 MiB) max;     34MB (    32 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     27MB (    26 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     29MB (    27 MiB) avg
Total process virtual memory:   8065MB (  7692 MiB) max;   8027MB (  7655 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
