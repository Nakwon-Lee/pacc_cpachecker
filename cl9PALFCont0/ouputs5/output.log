scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product48_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_286ktsbo/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 91: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 137: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 152: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 175: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 384: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 393: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 448: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 831: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 877: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 983: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 668: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            13582 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  13393 (99%)
  Because of loop head:            127 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         62 (0%)
  Times precision was empty:       548 (4%)
  Times precision was {false}:     138 (1%)
  Times result was cached:         9730 (72%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3166 (23%)
  Times result was 'false':        1422 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         5655
  BDD entailment checks:           3609
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          11
Number of abstraction locations:          59
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         54482
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 16.49
Number of irrelevant predicates:          18725 (34%)
Number of preds handled by boolean abs:   9853 (18%)
  Total number of models for allsat:      3257
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.03

Time for post operator:                  1.396s
  Time for path formula creation:        1.333s
Time for strengthen operator:            0.126s
Time for prec operator:                  7.734s
  Time for abstraction:                  7.471s (Max:     0.029s, Count: 13582)
    Boolean abstraction:                 2.218s
    Solving time:                        1.546s (Max:     0.017s)
    Model enumeration time:              0.237s
    Time for BDD construction:           0.141s (Max:     0.012s)
Time for merge operator:                 0.081s
Time for coverage check:                 0.035s
  Time for BDD entailment checks:        0.033s
Total time for SMT solver (w/o itp):     1.783s

Number of path formula cache hits:   27109 (47%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.211s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               781
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        7098 (count: 24541, min: 0, max: 470, avg: 0.29)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.355s
Automaton transfers with branching:                0
Automaton transfer successors:                        51737 (count: 51737, min: 1, max: 1, avg: 1.00) [1 x 51737]

CPA algorithm statistics
------------------------
Number of iterations:            40748
Max size of waitlist:            18
Average size of waitlist:        8
Number of computed successors:   44917
Max successors for one state:    2
Number of times merged:          1023
Number of times stopped:         2493
Number of times breaked:         62

Total time for CPA algorithm:        12.258s (Max:     0.932s)
  Time for choose from waitlist:      0.107s
  Time for precision adjustment:      8.294s
  Time for transfer relation:         2.898s
  Time for merge operator:            0.165s
  Time for stop operator:             0.160s
  Time for adding to reached set:     0.151s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   62
Avg. length of target path (in blocks):                3730 (count: 62, min: 27, max: 96, avg: 60.16)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.908s
  Counterexample analysis:                             0.613s (Max:     0.025s, Calls: 62)
    Refinement sat check:                              0.309s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.052s
  Precision update:                                    0.054s
  ARG update:                                          0.131s

Length of refined path (in blocks):                    2817 (count: 62, min: 16, max: 73, avg: 45.44)
Number of affected states:                             1160 (count: 62, min: 2, max: 68, avg: 18.71)
Length (states) of path with itp 'true':               1595 (count: 62, min: 0, max: 69, avg: 25.73)
Length (states) of path with itp non-trivial itp:      1160 (count: 62, min: 2, max: 68, avg: 18.71)
Length (states) of path with itp 'false':                62 (count: 62, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          11 (count: 62, min: 0, max: 2, avg: 0.18)
Equal non-trivial interpolants along paths:            1087 (count: 62, min: 1, max: 65, avg: 17.53)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                62
Number of successful refinements:     62
Number of failed refinements:         0
Max. size of reached set before ref.: 4892
Max. size of reached set after ref.:  3602
Avg. size of reached set before ref.: 1784.13
Avg. size of reached set after ref.:  1168.31

Total time for CEGAR algorithm:      13.399s
Time for refinements:                 1.078s
Average time for refinement:          0.017s
Max time for refinement:              0.041s

Code Coverage
-----------------------------
  Function coverage:      0.692
  Visited lines:          155
  Total lines:            447
  Line coverage:          0.347
  Visited conditions:     46
  Total conditions:       76
  Condition coverage:     0.605

CPAchecker general statistics
-----------------------------
Number of program locations:     645
Number of CFA edges:             697
Number of relevant variables:    114
Number of functions:             39
Number of loops:                 5
Size of reached set:             2822
  Number of reached locations:   212 (33%)
    Avg states per location:     13
    Max states per location:     74 (at node N263)
  Number of reached functions:   27 (69%)
  Number of partitions:          2731
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N96 (before lines 193-242), Function test called from node N637, stack depth 3 [17f4276b], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.525s
  Time for loading CPAs:          0.501s
  Time for loading parser:        0.574s
  Time for CFA construction:      1.230s
    Time for parsing file(s):     0.331s
    Time for AST to CFA:          0.366s
    Time for CFA sanity check:    0.087s
    Time for post-processing:     0.296s
      Time for var class.:        0.121s
Time for Analysis:               13.399s
CPU time for analysis:           13.400s
Time for analyzing result:        0.003s
Total time for CPAchecker:       15.928s
Total CPU time for CPAchecker:   15.920s
Time for statistics:              0.099s

Time for Garbage Collector:       0.329s (in 31 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 69MB (    66 MiB) max;     42MB (    40 MiB) avg;     74MB (    70 MiB) peak
Used non-heap memory:             37MB (    36 MiB) max;     33MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8134MB (  7757 MiB) max;   8116MB (  7740 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
