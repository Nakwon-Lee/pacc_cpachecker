scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--staging--iio--dds--ad9832.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_m_av_76b/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 2246: Dead code detected: tmp___0 = (int )_kstrtoul(s, base, res); (CFACreationUtils.addEdgeToCFA, INFO)

line 2252: Dead code detected: tmp___0 = (int )_kstrtoul(s, base, res); (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iio_allocate_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_get_device_id to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iio_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iio_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_disable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            951 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  938 (99%)
  Because of loop head:            8 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5 (1%)
  Times precision was empty:       338 (36%)
  Times precision was {false}:     10 (1%)
  Times result was cached:         502 (53%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      101 (11%)
  Times result was 'false':        9 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         181
  BDD entailment checks:           105
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       232
Number of predicates discovered:          2
Number of abstraction locations:          50
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         613
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 5.52
Number of irrelevant predicates:          29 (5%)
Number of preds handled by boolean abs:   101 (16%)
  Total number of models for allsat:      101
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.065s
  Time for path formula creation:        1.019s
Time for strengthen operator:            0.088s
Time for prec operator:                  0.782s
  Time for abstraction:                  0.693s (Max:     0.019s, Count: 951)
    Boolean abstraction:                 0.138s
    Solving time:                        0.109s (Max:     0.012s)
    Model enumeration time:              0.008s
    Time for BDD construction:           0.012s (Max:     0.001s)
Time for merge operator:                 0.017s
Time for coverage check:                 0.029s
  Time for BDD entailment checks:        0.029s
Total time for SMT solver (w/o itp):     0.117s

Number of path formula cache hits:   11912 (82%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.911s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         187 (count: 1104, min: 0, max: 182, avg: 0.17)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.117s
Automaton transfers with branching:                0
Automaton transfer successors:                        13750 (count: 13750, min: 1, max: 1, avg: 1.00) [1 x 13750]

CPA algorithm statistics
------------------------
Number of iterations:            2850
Max size of waitlist:            15
Average size of waitlist:        8
Number of computed successors:   3023
Max successors for one state:    2
Number of times merged:          38
Number of times stopped:         137
Number of times breaked:         5

Total time for CPA algorithm:         3.223s (Max:     1.557s)
  Time for choose from waitlist:      0.023s
  Time for precision adjustment:      0.970s
  Time for transfer relation:         1.930s
  Time for merge operator:            0.028s
  Time for stop operator:             0.085s
  Time for adding to reached set:     0.076s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                 194 (count: 5, min: 4, max: 104, avg: 38.80)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.243s
  Counterexample analysis:                             0.158s (Max:     0.089s, Calls: 5)
    Refinement sat check:                              0.097s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.034s
  Precision update:                                    0.008s
  ARG update:                                          0.038s

Length of refined path (in blocks):                     189 (count: 5, min: 3, max: 103, avg: 37.80)
Number of affected states:                              184 (count: 5, min: 2, max: 102, avg: 36.80)
Length (states) of path with itp 'true':                  0 (count: 5, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       184 (count: 5, min: 2, max: 102, avg: 36.80)
Length (states) of path with itp 'false':                 5 (count: 5, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 5, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             179 (count: 5, min: 1, max: 101, avg: 35.80)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 494
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 482.60
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       3.514s
Time for refinements:                 0.291s
Average time for refinement:          0.058s
Max time for refinement:              0.132s

Code Coverage
-----------------------------
  Function coverage:      0.484
  Visited lines:          1445
  Total lines:            2008
  Line coverage:          0.720
  Visited conditions:     46
  Total conditions:       106
  Condition coverage:     0.434

CPAchecker general statistics
-----------------------------
Number of program locations:     2204
Number of CFA edges:             2284
Number of relevant variables:    622
Number of functions:             31
Number of loops:                 1
Size of reached set:             480
  Number of reached locations:   208 (9%)
    Avg states per location:     2
    Max states per location:     17 (at node N21)
  Number of reached functions:   15 (48%)
  Number of partitions:          480
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          4.732s
  Time for loading CPAs:          0.833s
  Time for loading parser:        0.761s
  Time for CFA construction:      3.033s
    Time for parsing file(s):     0.899s
    Time for AST to CFA:          0.960s
    Time for CFA sanity check:    0.205s
    Time for post-processing:     0.758s
      Time for var class.:        0.456s
Time for Analysis:                3.514s
CPU time for analysis:            3.510s
Time for analyzing result:        0.008s
Total time for CPAchecker:        8.255s
Total CPU time for CPAchecker:    8.240s
Time for statistics:              0.106s

Time for Garbage Collector:       0.185s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 63MB (    60 MiB) max;     35MB (    33 MiB) avg;     68MB (    65 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     27MB (    26 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    35 MiB) max;     29MB (    27 MiB) avg
Total process virtual memory:   8132MB (  7755 MiB) max;   8088MB (  7714 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
