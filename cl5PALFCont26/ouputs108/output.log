scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--hwmon--pcf8591.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__g9lhhvt/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 2048: Dead code detected: tmp___0 = (int )_kstrtoul(s, base, res); (CFACreationUtils.addEdgeToCFA, INFO)

line 2054: Dead code detected: tmp___0 = (int )_kstrtoul(s, base, res); (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_write_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_byte to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            263 (8% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  249 (95%)
  Because of loop head:            9 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5 (2%)
  Times precision was empty:       135 (51%)
  Times precision was {false}:     7 (3%)
  Times result was cached:         84 (32%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      37 (14%)
  Times result was 'false':        9 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         137
  BDD entailment checks:           39
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       34
Number of predicates discovered:          2
Number of abstraction locations:          29
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         128
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 2.91
Number of irrelevant predicates:          27 (21%)
Number of preds handled by boolean abs:   37 (29%)
  Total number of models for allsat:      37
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.468s
  Time for path formula creation:        0.454s
Time for strengthen operator:            0.036s
Time for prec operator:                  0.302s
  Time for abstraction:                  0.249s (Max:     0.025s, Count: 263)
    Boolean abstraction:                 0.055s
    Solving time:                        0.028s (Max:     0.003s)
    Model enumeration time:              0.010s
    Time for BDD construction:           0.011s (Max:     0.006s)
Time for merge operator:                 0.039s
Time for coverage check:                 0.005s
  Time for BDD entailment checks:        0.005s
Total time for SMT solver (w/o itp):     0.038s

Number of path formula cache hits:   2420 (71%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.416s

Total number of created targets for pointer analysis: 2
   Number of created targets for uf: *signed_int is 2


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 436, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.087s
Automaton transfers with branching:                0
Automaton transfer successors:                         3144 (count: 3144, min: 1, max: 1, avg: 1.00) [1 x 3144]

CPA algorithm statistics
------------------------
Number of iterations:            1118
Max size of waitlist:            12
Average size of waitlist:        7
Number of computed successors:   1240
Max successors for one state:    2
Number of times merged:          49
Number of times stopped:         83
Number of times breaked:         5

Total time for CPA algorithm:         1.464s (Max:     0.763s)
  Time for choose from waitlist:      0.017s
  Time for precision adjustment:      0.457s
  Time for transfer relation:         0.830s
  Time for merge operator:            0.046s
  Time for stop operator:             0.027s
  Time for adding to reached set:     0.045s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                  77 (count: 5, min: 5, max: 26, avg: 15.40)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.111s
  Counterexample analysis:                             0.071s (Max:     0.021s, Calls: 5)
    Refinement sat check:                              0.045s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.013s
  Precision update:                                    0.003s
  ARG update:                                          0.019s

Length of refined path (in blocks):                      72 (count: 5, min: 4, max: 25, avg: 14.40)
Number of affected states:                               67 (count: 5, min: 3, max: 24, avg: 13.40)
Length (states) of path with itp 'true':                  0 (count: 5, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        67 (count: 5, min: 3, max: 24, avg: 13.40)
Length (states) of path with itp 'false':                 5 (count: 5, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 5, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              62 (count: 5, min: 2, max: 23, avg: 12.40)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 205
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 194.00
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       1.599s
Time for refinements:                 0.134s
Average time for refinement:          0.026s
Max time for refinement:              0.050s

Code Coverage
-----------------------------
  Function coverage:      0.424
  Visited lines:          722
  Total lines:            1149
  Line coverage:          0.628
  Visited conditions:     38
  Total conditions:       80
  Condition coverage:     0.475

CPAchecker general statistics
-----------------------------
Number of program locations:     1335
Number of CFA edges:             1381
Number of relevant variables:    240
Number of functions:             33
Number of loops:                 1
Size of reached set:             194
  Number of reached locations:   158 (12%)
    Avg states per location:     1
    Max states per location:     4 (at node N369)
  Number of reached functions:   14 (42%)
  Number of partitions:          194
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          4.380s
  Time for loading CPAs:          0.944s
  Time for loading parser:        0.759s
  Time for CFA construction:      2.512s
    Time for parsing file(s):     0.842s
    Time for AST to CFA:          0.779s
    Time for CFA sanity check:    0.150s
    Time for post-processing:     0.562s
      Time for var class.:        0.264s
Time for Analysis:                1.599s
CPU time for analysis:            1.600s
Time for analyzing result:        0.001s
Total time for CPAchecker:        5.983s
Total CPU time for CPAchecker:    5.970s
Time for statistics:              0.081s

Time for Garbage Collector:       0.149s (in 6 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 55MB (    53 MiB) max;     32MB (    30 MiB) avg;     63MB (    61 MiB) peak
Used non-heap memory:             32MB (    31 MiB) max;     25MB (    24 MiB) avg;     33MB (    32 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    33 MiB) max;     27MB (    25 MiB) avg
Total process virtual memory:   8065MB (  7692 MiB) max;   8018MB (  7646 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
