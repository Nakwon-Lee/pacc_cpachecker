scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--media--dvb--dvb-usb--dvb-usb-dibusb-mb.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_k7o62wkz/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6085: Function pointer *__cil_tmp18 with type int (*)(struct dvb_frontend *fe, int onoff, u8 pll_ctrl) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6169: Function pointer *__a with type struct dvb_frontend *(*)(const struct dib3000_config *config, struct i2c_adapter *i2c, struct dib_fe_xfer_ops *xfer_ops) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6376: Function pointer *__a with type struct dvb_frontend *(*)(struct dvb_frontend *fe, int pll_addr, struct i2c_adapter *i2c, unsigned int pll_desc_id) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6287: Function pointer *__a with type struct dvb_frontend *(*)(struct dvb_frontend *fe, int pll_addr, struct i2c_adapter *i2c, unsigned int pll_desc_id) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_usb_device_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6587: Ignoring call via function pointer dibusb_tuner_probe_and_attach::__cil_tmp66 for which no suitable target was found in line: (*__cil_tmp66)(__cil_tmp71, 1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6587: Ignoring function call through function pointer *__cil_tmp66: (*__cil_tmp66)(__cil_tmp71, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6085: Ignoring call via function pointer dib3000mb_i2c_gate_ctrl::__cil_tmp18 for which no suitable target was found in line: tmp___7 = (*__cil_tmp18)(fe, enable, __cil_tmp21); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Assuming external function i2c_transfer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6636: Ignoring call via function pointer dibusb_tuner_probe_and_attach::__cil_tmp95 for which no suitable target was found in line: (*__cil_tmp95)(__cil_tmp100, 0); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6636: Ignoring function call through function pointer *__cil_tmp95: (*__cil_tmp95)(__cil_tmp100, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __symbol_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_module to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6376: Ignoring call via function pointer dibusb_panasonic_tuner_attach::__a for which no suitable target was found in line: tmp___11 = (*__a)(__cil_tmp20, 96, __cil_tmp24, 8U); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6376: Ignoring function call through function pointer *__a: tmp___11 = (*__a)(__cil_tmp20, 96, __cil_tmp24, 8U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __symbol_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6287: Ignoring call via function pointer dibusb_thomson_tuner_attach::__a for which no suitable target was found in line: tmp___11 = (*__a)(__cil_tmp20, 97, __cil_tmp24, 5U); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6287: Ignoring function call through function pointer *__a: tmp___11 = (*__a)(__cil_tmp20, 97, __cil_tmp24, 5U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6169: Ignoring call via function pointer dibusb_dib3000mb_frontend_attach::__a for which no suitable target was found in line: tmp___11 = (*__a)(__cil_tmp16, __cil_tmp20, __cil_tmp21); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6169: Ignoring function call through function pointer *__a: tmp___11 = (*__a)(__cil_tmp16, __cil_tmp20, __cil_tmp21); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            919 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  830 (90%)
  Because of loop head:            78 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         11 (1%)
  Times precision was empty:       186 (20%)
  Times precision was {false}:     8 (1%)
  Times result was cached:         693 (75%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      32 (3%)
  Times result was 'false':        48 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         2228
  BDD entailment checks:           238
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       205
Number of predicates discovered:          2
Number of abstraction locations:          22
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         733
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 18.33
Number of irrelevant predicates:          69 (9%)
Number of preds handled by boolean abs:   32 (4%)
  Total number of models for allsat:      31
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.97

Time for post operator:                  1.445s
  Time for path formula creation:        1.373s
Time for strengthen operator:            0.146s
Time for prec operator:                  1.125s
  Time for abstraction:                  0.988s (Max:     0.036s, Count: 919)
    Boolean abstraction:                 0.193s
    Solving time:                        0.145s (Max:     0.027s)
    Model enumeration time:              0.012s
    Time for BDD construction:           0.029s (Max:     0.015s)
Time for merge operator:                 0.060s
Time for coverage check:                 0.029s
  Time for BDD entailment checks:        0.027s
Total time for SMT solver (w/o itp):     0.157s

Number of path formula cache hits:   33279 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.147s

Total number of created targets for pointer analysis: 29
   Number of created targets for uf: *unsigned_char is 4


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          66 (count: 661, min: 0, max: 38, avg: 0.10)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.270s
Automaton transfers with branching:                0
Automaton transfer successors:                        34229 (count: 34229, min: 1, max: 1, avg: 1.00) [1 x 34229]

CPA algorithm statistics
------------------------
Number of iterations:            8415
Max size of waitlist:            23
Average size of waitlist:        12
Number of computed successors:   9854
Max successors for one state:    2
Number of times merged:          995
Number of times stopped:         1214
Number of times breaked:         11

Total time for CPA algorithm:         5.025s (Max:     1.177s)
  Time for choose from waitlist:      0.046s
  Time for precision adjustment:      1.477s
  Time for transfer relation:         2.902s
  Time for merge operator:            0.138s
  Time for stop operator:             0.117s
  Time for adding to reached set:     0.122s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   11
Avg. length of target path (in blocks):                  97 (count: 11, min: 4, max: 13, avg: 8.82)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.274s
  Counterexample analysis:                             0.147s (Max:     0.023s, Calls: 11)
    Refinement sat check:                              0.109s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.013s
  Precision update:                                    0.023s
  ARG update:                                          0.065s

Length of refined path (in blocks):                      86 (count: 11, min: 3, max: 12, avg: 7.82)
Number of affected states:                               75 (count: 11, min: 2, max: 11, avg: 6.82)
Length (states) of path with itp 'true':                  0 (count: 11, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        75 (count: 11, min: 2, max: 11, avg: 6.82)
Length (states) of path with itp 'false':                11 (count: 11, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 11, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              64 (count: 11, min: 1, max: 10, avg: 5.82)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                11
Number of successful refinements:     11
Number of failed refinements:         0
Max. size of reached set before ref.: 865
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 712.82
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       5.368s
Time for refinements:                 0.342s
Average time for refinement:          0.031s
Max time for refinement:              0.072s

Code Coverage
-----------------------------
  Function coverage:      0.400
  Visited lines:          1548
  Total lines:            1601
  Line coverage:          0.967
  Visited conditions:     68
  Total conditions:       88
  Condition coverage:     0.773

CPAchecker general statistics
-----------------------------
Number of program locations:     1741
Number of CFA edges:             1788
Number of relevant variables:    234
Number of functions:             20
Number of loops:                 1
Size of reached set:             785
  Number of reached locations:   194 (11%)
    Avg states per location:     4
    Max states per location:     10 (at node N150)
  Number of reached functions:   8 (40%)
  Number of partitions:          785
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          5.667s
  Time for loading CPAs:          0.935s
  Time for loading parser:        0.764s
  Time for CFA construction:      3.858s
    Time for parsing file(s):     1.121s
    Time for AST to CFA:          1.380s
    Time for CFA sanity check:    0.161s
    Time for post-processing:     0.899s
      Time for var class.:        0.430s
Time for Analysis:                5.368s
CPU time for analysis:            5.360s
Time for analyzing result:        0.005s
Total time for CPAchecker:       11.040s
Total CPU time for CPAchecker:   11.020s
Time for statistics:              0.117s

Time for Garbage Collector:       0.244s (in 15 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 67MB (    63 MiB) max;     39MB (    37 MiB) avg;     71MB (    67 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     28MB (    27 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     30MB (    29 MiB) avg
Total process virtual memory:   8131MB (  7754 MiB) max;   8097MB (  7722 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
