scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/loop-lit/gj2007b_true-unreach-call_true-termination.c.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ad4a205l/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            30 (8% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            11 (37%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         19 (63%)
  Times precision was empty:       2 (7%)
  Times precision was {false}:     18 (60%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      10 (33%)
  Times result was 'false':        15 (50%)
Number of strengthen sat checks:   0
Number of coverage checks:         98
  BDD entailment checks:           10
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       13
Number of predicates discovered:          9
Number of abstraction locations:          2
Max number of predicates per location:    8
Avg number of predicates per location:    4
Total predicates per abstraction:         67
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 2.39
Number of irrelevant predicates:          18 (27%)
Number of preds handled by boolean abs:   49 (73%)
  Total number of models for allsat:      20
  Max number of models for allsat:        3
  Avg number of models for allsat:        2.00

Time for post operator:                  0.121s
  Time for path formula creation:        0.117s
Time for strengthen operator:            0.010s
Time for prec operator:                  0.216s
  Time for abstraction:                  0.207s (Max:     0.028s, Count: 30)
    Boolean abstraction:                 0.045s
    Solving time:                        0.025s (Max:     0.005s)
    Model enumeration time:              0.005s
    Time for BDD construction:           0.012s (Max:     0.006s)
Time for merge operator:                 0.016s
Time for coverage check:                 0.001s
  Time for BDD entailment checks:        0.001s
Total time for SMT solver (w/o itp):     0.030s

Number of path formula cache hits:   268 (67%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.112s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               350
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 252, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.026s
Automaton transfers with branching:                0
Automaton transfer successors:                          367 (count: 367, min: 1, max: 1, avg: 1.00) [1 x 367]

CPA algorithm statistics
------------------------
Number of iterations:            285
Max size of waitlist:            3
Average size of waitlist:        2
Number of computed successors:   352
Max successors for one state:    2
Number of times merged:          44
Number of times stopped:         45
Number of times breaked:         4

Total time for CPA algorithm:         0.603s (Max:     0.149s)
  Time for choose from waitlist:      0.007s
  Time for precision adjustment:      0.284s
  Time for transfer relation:         0.225s
  Time for merge operator:            0.045s
  Time for stop operator:             0.015s
  Time for adding to reached set:     0.008s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4
Avg. length of target path (in blocks):                  11 (count: 4, min: 2, max: 4, avg: 2.75)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.110s
  Counterexample analysis:                             0.064s (Max:     0.022s, Calls: 4)
    Refinement sat check:                              0.019s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.022s
  Precision update:                                    0.010s
  ARG update:                                          0.006s

Length of refined path (in blocks):                      11 (count: 4, min: 2, max: 4, avg: 2.75)
Number of affected states:                                7 (count: 4, min: 1, max: 3, avg: 1.75)
Length (states) of path with itp 'true':                  0 (count: 4, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         7 (count: 4, min: 1, max: 3, avg: 1.75)
Length (states) of path with itp 'false':                 0 (count: 4, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           3 (count: 4, min: 0, max: 2, avg: 0.75)
Equal non-trivial interpolants along paths:               0 (count: 4, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4
Number of successful refinements:     4
Number of failed refinements:         0
Max. size of reached set before ref.: 95
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 50.75
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       0.799s
Time for refinements:                 0.196s
Average time for refinement:          0.049s
Max time for refinement:              0.131s

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          13
  Total lines:            13
  Line coverage:          1.000
  Visited conditions:     14
  Total conditions:       14
  Condition coverage:     1.000

CPAchecker general statistics
-----------------------------
Number of program locations:     41
Number of CFA edges:             48
Number of relevant variables:    8
Number of functions:             2
Number of loops:                 1
Size of reached set:             102
  Number of reached locations:   30 (73%)
    Avg states per location:     3
    Max states per location:     6 (at node N0)
  Number of reached functions:   2 (100%)
  Number of partitions:          100
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N15 (before line 14), Function main called from node N9, stack depth 1 [52b1beb6], stack [main]])
  Number of target states:       0

Time for analysis setup:          2.779s
  Time for loading CPAs:          0.764s
  Time for loading parser:        0.828s
  Time for CFA construction:      0.999s
    Time for parsing file(s):     0.408s
    Time for AST to CFA:          0.162s
    Time for CFA sanity check:    0.022s
    Time for post-processing:     0.205s
      Time for var class.:        0.049s
Time for Analysis:                0.799s
CPU time for analysis:            0.800s
Time for analyzing result:        0.000s
Total time for CPAchecker:        3.583s
Total CPU time for CPAchecker:    3.580s
Time for statistics:              0.069s

Time for Garbage Collector:       0.122s (in 4 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 41MB (    39 MiB) max;     26MB (    24 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             28MB (    27 MiB) max;     21MB (    20 MiB) avg;     30MB (    29 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        31MB (    30 MiB) max;     23MB (    22 MiB) avg
Total process virtual memory:   8132MB (  7756 MiB) max;   8039MB (  7667 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
