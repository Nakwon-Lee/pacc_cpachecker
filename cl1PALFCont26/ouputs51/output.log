scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--input--joystick--spaceorb.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_rg13c5az/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __serio_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function serio_close to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function serio_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_set_abs_params to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function serio_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1881 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1346 (72%)
  Because of loop head:            520 (28%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         15 (1%)
  Times precision was empty:       684 (36%)
  Times precision was {false}:     148 (8%)
  Times result was cached:         988 (53%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      61 (3%)
  Times result was 'false':        29 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         1391
  BDD entailment checks:           591
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       157
Number of predicates discovered:          2
Number of abstraction locations:          44
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         1197
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 5.73
Number of irrelevant predicates:          568 (47%)
Number of preds handled by boolean abs:   61 (5%)
  Total number of models for allsat:      61
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  2.525s
  Time for path formula creation:        2.437s
Time for strengthen operator:            0.094s
Time for prec operator:                  1.278s
  Time for abstraction:                  1.116s (Max:     0.025s, Count: 1881)
    Boolean abstraction:                 0.111s
    Solving time:                        0.296s (Max:     0.018s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.011s (Max:     0.010s)
Time for merge operator:                 0.140s
Time for coverage check:                 0.030s
  Time for BDD entailment checks:        0.029s
Total time for SMT solver (w/o itp):     0.296s

Number of path formula cache hits:   16505 (57%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.320s

Total number of created targets for pointer analysis: 1866
   Number of created targets for uf: *signed_int is 223
   Number of created targets for uf: *unsigned_char is 351


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         123 (count: 2387, min: 0, max: 30, avg: 0.05)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.244s
Automaton transfers with branching:                0
Automaton transfer successors:                        27839 (count: 27839, min: 1, max: 1, avg: 1.00) [1 x 27839]

CPA algorithm statistics
------------------------
Number of iterations:            8179
Max size of waitlist:            25
Average size of waitlist:        13
Number of computed successors:   9269
Max successors for one state:    2
Number of times merged:          400
Number of times stopped:         904
Number of times breaked:         15

Total time for CPA algorithm:         6.025s (Max:     1.046s)
  Time for choose from waitlist:      0.088s
  Time for precision adjustment:      1.621s
  Time for transfer relation:         3.692s
  Time for merge operator:            0.177s
  Time for stop operator:             0.130s
  Time for adding to reached set:     0.109s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   15
Avg. length of target path (in blocks):                 295 (count: 15, min: 8, max: 28, avg: 19.67)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.321s
  Counterexample analysis:                             0.210s (Max:     0.027s, Calls: 15)
    Refinement sat check:                              0.145s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.032s
  Precision update:                                    0.005s
  ARG update:                                          0.050s

Length of refined path (in blocks):                     280 (count: 15, min: 7, max: 27, avg: 18.67)
Number of affected states:                              265 (count: 15, min: 6, max: 26, avg: 17.67)
Length (states) of path with itp 'true':                  0 (count: 15, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       265 (count: 15, min: 6, max: 26, avg: 17.67)
Length (states) of path with itp 'false':                15 (count: 15, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 15, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             250 (count: 15, min: 5, max: 25, avg: 16.67)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                15
Number of successful refinements:     15
Number of failed refinements:         0
Max. size of reached set before ref.: 609
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 536.00
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       6.414s
Time for refinements:                 0.386s
Average time for refinement:          0.025s
Max time for refinement:              0.069s

Code Coverage
-----------------------------
  Function coverage:      0.696
  Visited lines:          1170
  Total lines:            1194
  Line coverage:          0.980
  Visited conditions:     78
  Total conditions:       86
  Condition coverage:     0.907

CPAchecker general statistics
-----------------------------
Number of program locations:     1325
Number of CFA edges:             1369
Number of relevant variables:    254
Number of functions:             23
Number of loops:                 10
Size of reached set:             342
  Number of reached locations:   273 (21%)
    Avg states per location:     1
    Max states per location:     5 (at node N25)
  Number of reached functions:   16 (70%)
  Number of partitions:          342
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          4.172s
  Time for loading CPAs:          0.907s
  Time for loading parser:        0.712s
  Time for CFA construction:      2.400s
    Time for parsing file(s):     0.807s
    Time for AST to CFA:          0.697s
    Time for CFA sanity check:    0.158s
    Time for post-processing:     0.545s
      Time for var class.:        0.234s
Time for Analysis:                6.414s
CPU time for analysis:            6.420s
Time for analyzing result:        0.000s
Total time for CPAchecker:       10.590s
Total CPU time for CPAchecker:   10.580s
Time for statistics:              0.096s

Time for Garbage Collector:       0.218s (in 12 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 63MB (    60 MiB) max;     37MB (    35 MiB) avg;     68MB (    64 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     29MB (    28 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     31MB (    30 MiB) avg
Total process virtual memory:   8132MB (  7756 MiB) max;   8100MB (  7725 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
