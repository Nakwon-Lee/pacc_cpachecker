scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/eca-rers2012/Problem03_label29_true-unreach-call.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_n_qin9yt/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            30 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  14 (47%)
  Because of loop head:            8 (27%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         8 (27%)
  Times precision was empty:       4 (13%)
  Times precision was {false}:     9 (30%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      17 (57%)
  Times result was 'false':        6 (20%)
Number of strengthen sat checks:   0
Number of coverage checks:         47349
  BDD entailment checks:           21
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       3045
Number of predicates discovered:          20
Number of abstraction locations:          4
Max number of predicates per location:    19
Avg number of predicates per location:    11
Total predicates per abstraction:         241
Max number of predicates per abstraction: 19
Avg number of predicates per abstraction: 9.27
Number of irrelevant predicates:          97 (40%)
Number of preds handled by boolean abs:   144 (60%)
  Total number of models for allsat:      637
  Max number of models for allsat:        81
  Avg number of models for allsat:        37.47

Time for post operator:                  2.393s
  Time for path formula creation:        2.310s
Time for strengthen operator:            0.089s
Time for prec operator:                  2.342s
  Time for abstraction:                  2.202s (Max:     0.612s, Count: 30)
    Boolean abstraction:                 1.640s
    Solving time:                        0.491s (Max:     0.074s)
    Model enumeration time:              1.206s
    Time for BDD construction:           0.061s (Max:     0.023s)
Time for merge operator:                 0.368s
Time for coverage check:                 0.012s
  Time for BDD entailment checks:        0.001s
Total time for SMT solver (w/o itp):     1.697s

Number of path formula cache hits:   30257 (45%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.246s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               2472
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         489 (count: 386, min: 0, max: 129, avg: 1.27)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.263s
Automaton transfers with branching:                0
Automaton transfer successors:                        58829 (count: 59257, min: 0, max: 1, avg: 0.99) [0 x 428, 1 x 58829]

CPA algorithm statistics
------------------------
Number of iterations:            27642
Max size of waitlist:            7
Average size of waitlist:        3
Number of computed successors:   51318
Max successors for one state:    2
Number of times merged:          23664
Number of times stopped:         23665
Number of times breaked:         2

Total time for CPA algorithm:         8.659s (Max:     5.257s)
  Time for choose from waitlist:      0.080s
  Time for precision adjustment:      3.125s
  Time for transfer relation:         3.787s
  Time for merge operator:            1.035s
  Time for stop operator:             0.184s
  Time for adding to reached set:     0.077s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2
Avg. length of target path (in blocks):                   9 (count: 2, min: 3, max: 6, avg: 4.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.244s
  Counterexample analysis:                             0.134s (Max:     0.081s, Calls: 2)
    Refinement sat check:                              0.115s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.012s
  Precision update:                                    0.002s
  ARG update:                                          0.063s

Length of refined path (in blocks):                       9 (count: 2, min: 3, max: 6, avg: 4.50)
Number of affected states:                                7 (count: 2, min: 2, max: 5, avg: 3.50)
Length (states) of path with itp 'true':                  0 (count: 2, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         7 (count: 2, min: 2, max: 5, avg: 3.50)
Length (states) of path with itp 'false':                 0 (count: 2, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           1 (count: 2, min: 0, max: 1, avg: 0.50)
Equal non-trivial interpolants along paths:               4 (count: 2, min: 1, max: 3, avg: 2.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2
Number of successful refinements:     2
Number of failed refinements:         0
Max. size of reached set before ref.: 6784
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 5023.50
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       8.965s
Time for refinements:                 0.304s
Average time for refinement:          0.152s
Max time for refinement:              0.165s

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          1549
  Total lines:            1549
  Line coverage:          1.000
  Visited conditions:     6132
  Total conditions:       6132
  Condition coverage:     1.000

CPAchecker general statistics
-----------------------------
Number of program locations:     4568
Number of CFA edges:             7633
Number of relevant variables:    30
Number of functions:             2
Number of loops:                 1
Size of reached set:             17607
  Number of reached locations:   3524 (77%)
    Avg states per location:     4
    Max states per location:     5 (at node N0)
  Number of reached functions:   2 (100%)
  Number of partitions:          17600
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N4782 (before lines 1658-1668), Function main called from node N4779, stack depth 1 [2ddb3ae8], stack [main]])
  Number of target states:       0

Time for analysis setup:          3.231s
  Time for loading CPAs:          0.654s
  Time for loading parser:        0.450s
  Time for CFA construction:      1.978s
    Time for parsing file(s):     0.502s
    Time for AST to CFA:          0.587s
    Time for CFA sanity check:    0.310s
    Time for post-processing:     0.485s
      Time for var class.:        0.259s
Time for Analysis:                8.965s
CPU time for analysis:            8.960s
Time for analyzing result:        0.019s
Total time for CPAchecker:       12.199s
Total CPU time for CPAchecker:   12.180s
Time for statistics:              0.424s

Time for Garbage Collector:       0.388s (in 29 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 82MB (    78 MiB) max;     49MB (    47 MiB) avg;     90MB (    86 MiB) peak
Used non-heap memory:             34MB (    32 MiB) max;     30MB (    29 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     33MB (    31 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8066MB (  7693 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
